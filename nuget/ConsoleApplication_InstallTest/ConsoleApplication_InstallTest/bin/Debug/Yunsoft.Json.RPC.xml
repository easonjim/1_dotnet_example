<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Yunsoft.Json.RPC</name>
    </assembly>
    <members>
        <member name="T:Yunsoft.Json.Mask">
            <summary>
            Provides masking services where one value masks another given a test.
            </summary>
        </member>
        <member name="T:Yunsoft.Json.RPC.CollectionHelper">
            <summary> 
            Helper methods for collections. This type supports the
            Yunsoft infrastructure and is not intended to be used directly from
            your code. 
            </summary>
        </member>
        <member name="T:Yunsoft.Json.RPC.InvariantStringArray">
            <summary> 
            Helper methods for array containing culturally-invariant strings.
            The main reason for this helper is to help with po
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonRpcHelpInputAttribute.#ctor(System.String,System.String,Yunsoft.Json.RPC.JsonType,System.Boolean,System.String,System.String)">
            <summary>
            输入参数注释
            </summary>
            <param name="parameter">请求参数</param>
            <param name="type">类型</param>
            <param name="required">必选</param>
            <param name="defaults">默认值</param>
            <param name="explanation">说明</param>
            <param name="testValue">测试值，专供测试页面调用</param>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonRpcHelpOutputAttribute.#ctor(System.String,System.String,Yunsoft.Json.RPC.JsonType)">
            <summary>
            输出字段注释
            </summary>
            <param name="parameter">返回值字段</param>
            <param name="type">类型</param>
            <param name="explanation">说明</param>
        </member>
        <member name="M:Yunsoft.Json.RPC.Services.IService.EncryptResponse(System.Collections.IDictionary)">
            <summary>
            加密输出数据
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.Services.IService.DecryptRequest(System.String)">
            <summary>
            解密输入数据
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonRpcService.SystemListMethods">
            <remarks>
            Provides introspection capabilities. 
            See http://scripts.incutio.com/xmlrpc/introspection.html.
            </remarks>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonRpcService.EncryptResponse(System.Collections.IDictionary)">
            <summary>
            加密输出数据
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonRpcService.DecryptRequest(System.String)">
            <summary>
            解密输入数据
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonRpcServices.GetServiceName(Yunsoft.Json.RPC.Services.IService,System.String)">
            <summary>
            Returns the name of the service or an anonymous default if it does
            not have a name.
            </summary>
        </member>
        <member name="T:Yunsoft.Json.RPC.JsonType">
            <summary>
            Json 数据类型
            </summary>
        </member>
        <member name="F:Yunsoft.Json.RPC.JsonType.Number">
            <summary>
            在JavaScript中的双精度浮点格式
            </summary>
        </member>
        <member name="F:Yunsoft.Json.RPC.JsonType.String">
            <summary>
            双引号的反斜杠转义的Unicode
            </summary>
        </member>
        <member name="F:Yunsoft.Json.RPC.JsonType.Boolean">
            <summary>
            true 或 false
            </summary>
        </member>
        <member name="F:Yunsoft.Json.RPC.JsonType.Array">
            <summary>
            值的有序序列
            </summary>
        </member>
        <member name="F:Yunsoft.Json.RPC.JsonType.Value">
            <summary>
            它可以是一个字符串，一个数字，真的还是假（true/false），空(null )，数组，对象等
            </summary>
        </member>
        <member name="F:Yunsoft.Json.RPC.JsonType.Object">
            <summary>
            无序集合键值对
            </summary>
        </member>
        <member name="F:Yunsoft.Json.RPC.JsonType.Null">
            <summary>
            empty，返回null
            </summary>
        </member>
        <member name="T:Yunsoft.Json.RPC.Web.HttpRequestSecurity">
            <summary>
            Helper methods for security web requests.
            </summary>
        </member>
        <member name="T:Yunsoft.Json.RPC.JsonRpc.Web.JsonRpcBuildHtml">
            <summary>
            生成HTML
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonRpc.Web.JsonRpcBuildHtml.BuildHelpInput(System.String)">
            <summary>
            生成请求参数html
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonRpc.Web.JsonRpcBuildHtml.GetTestValue(System.String,System.String)">
            <summary>
            获取测试页面的测试值
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonRpc.Web.JsonRpcBuildHtml.BuildHelpOutput(System.String)">
            <summary>
            生成返回值字段html
            </summary>
        </member>
        <member name="T:Yunsoft.Json.RPC.IndentedTextWriter">
            <summary>
            Drop-in replacement for <see cref="T:System.CodeDom.Compiler.IndentedTextWriter"/>
            that does not require a full-trust link and inheritance demand.
            </summary>
        </member>
        <member name="T:Yunsoft.Json.RPC.InternetDate">
            <summary>
            Provides date and time parsing according to the formats described in 
            RFC 822/1123 specification.
            </summary>
        </member>
        <member name="T:Yunsoft.Json.RPC.JsonML.JsonMLCodec">
            <summary>
            Encodes or decodes JsonML.
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonML.JsonMLCodec.Decode(Yunsoft.Json.JsonReader,System.Xml.XmlWriter)">
            <summary>
            Converts JsonML in object or array form to XML.
            </summary>
            <remarks>
            The JsonML form is automatically detected. If the reader is 
            positioned on an object then decoding occurs using the object
            form. Otherwise the array form is assumed.
            </remarks>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonML.JsonMLCodec.Decode(Yunsoft.Json.JsonReader,System.Xml.XmlWriter,Yunsoft.Json.RPC.JsonML.JsonMLForm)">
            <summary>
            Converts JsonML to XML. A parameter specifies the input JsonML form.
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonML.JsonMLCodec.DecodeArrayForm(Yunsoft.Json.JsonReader,System.Xml.XmlWriter)">
            <summary>
            Converts JsonML in array form to XML.
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonML.JsonMLCodec.DecodeObjectForm(Yunsoft.Json.JsonReader,System.Xml.XmlWriter)">
            <summary>
            Converts JsonML in object form to XML.
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonML.JsonMLCodec.Encode(System.Xml.XmlReader,Yunsoft.Json.JsonWriter)">
            <summary>
            Converts XML to JsonML array form.
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonML.JsonMLCodec.Encode(System.Xml.XmlReader,Yunsoft.Json.JsonWriter,Yunsoft.Json.RPC.JsonML.JsonMLForm)">
            <summary>
            Converts XML to JsonML. A parameter specifies the output JsonML form.
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonML.JsonMLCodec.EncodeArrayForm(System.Xml.XmlReader,Yunsoft.Json.JsonWriter)">
            <summary>
            Converts XML to JsonML array form.
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.JsonML.JsonMLCodec.EncodeObjectForm(System.Xml.XmlReader,Yunsoft.Json.JsonWriter)">
            <summary>
            Converts XML to JsonML object form.
            </summary>
        </member>
        <member name="T:Yunsoft.Json.RPC.Services.InvocationException">
            <summary>
            The exception that is thrown when <see cref="!:IRpcMethod.Invoke"/> 
            fails.
            </summary>
        </member>
        <member name="M:Yunsoft.Json.RPC.Services.Method.BeginInvoke(Yunsoft.Json.RPC.Services.IService,System.String[],System.Object[],System.AsyncCallback,System.Object)">
            <remarks>
            The default implementation calls Invoke synchronously and returns
            an IAsyncResult that also indicates that the operation completed
            synchronously. If a callback was supplied, it will be called 
            before BeginInvoke returns. Also, if Invoke throws an exception, 
            it is delayed until EndInvoke is called to retrieve the results.
            </remarks>
        </member>
        <member name="M:Yunsoft.Json.RPC.Services.Method.TransposeVariableArguments(System.Object[])">
            <summary>
            Takes an array of arguments that are designated for a method and
            transposes them if the target method supports variable arguments (in
            other words, the last parameter is annotated with the JsonRpcParams
            attribute). If the method does not support variable arguments then
            the input array is returned verbatim. 
            </summary>
        </member>
        <member name="P:Yunsoft.Json.RPC.Services.Method.OutputDescription">
            <summary>
            输出解释
            </summary>
        </member>
        <member name="P:Yunsoft.Json.RPC.Services.Method.InputDescription">
            <summary>
            输入解释
            </summary>
        </member>
        <member name="P:Yunsoft.Json.RPC.Services.Method.Module">
            <summary>
            模块
            </summary>
        </member>
        <member name="P:Yunsoft.Json.RPC.Services.Method.HasParamArray">
            <summary>
            Determines if the method accepts variable number of arguments or
            not. A method is designated as accepting variable arguments by
            annotating the last parameter of the method with the JsonRpcParams
            attribute.
            </summary>
        </member>
        <member name="P:Yunsoft.Json.RPC.Services.MethodBuilder.OutputDescription">
            <summary>
            输出解释
            </summary>
        </member>
        <member name="P:Yunsoft.Json.RPC.Services.MethodBuilder.InputDescription">
            <summary>
            输入解释
            </summary>
        </member>
        <member name="P:Yunsoft.Json.RPC.Services.MethodBuilder.Module">
            <summary>
            模块
            </summary>
        </member>
        <member name="P:Yunsoft.Json.RPC.Services.ServiceClassBuilder.OutputDescription">
            <summary>
            输出参数
            </summary>
        </member>
        <member name="P:Yunsoft.Json.RPC.Services.ServiceClassBuilder.InputDescription">
            <summary>
            输出参数
            </summary>
        </member>
        <member name="P:Yunsoft.Json.RPC.Services.ServiceClassBuilder.Module">
            <summary>
            模块
            </summary>
        </member>
        <member name="T:Yunsoft.Json.RPC.Services.TargetMethodException">
            <summary>
            The exception that is thrown when <see cref="M:Yunsoft.Json.RPC.Services.IMethodImpl.Invoke(Yunsoft.Json.RPC.Services.IService,System.Object[])"/> 
            or its asynchronous version fails.
            </summary>
        </member>
    </members>
</doc>
